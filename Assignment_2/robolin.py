# -*- coding: utf-8 -*-
"""A2Q3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LJg_4ox9kaYd0NGqbmBMK5nDOJOSDK-g
"""

import numpy as np
import cv2
import matplotlib.pyplot as plt
import math
import sys
from PIL import Image

def fast_hough_line(img, angle_step=1, lines_are_white=True, value_threshold=5):

    thetas = np.deg2rad(np.arange(-90.0, 90.0, angle_step)) 
    width, height = img.shape
    diag_len = int(np.ceil(np.sqrt(width * width + height * height)))   # max_dist
    rhos = np.linspace(-diag_len, diag_len, diag_len * 2)

    cos_theta = np.cos(thetas)
    sin_theta = np.sin(thetas)
    num_thetas = len(thetas)

    accumulator = np.zeros((2 * diag_len, num_thetas))
    are_edges = img > value_threshold if lines_are_white else img < value_threshold

    y_idxs, x_idxs = np.nonzero(are_edges)

    xcosthetas = np.dot(x_idxs.reshape((-1,1)), cos_theta.reshape((1,-1)))
    ysinthetas = np.dot(y_idxs.reshape((-1,1)), sin_theta.reshape((1,-1)))
    rhosmat = np.round(xcosthetas + ysinthetas) + diag_len
    rhosmat = rhosmat.astype(np.int16)
    for i in range(num_thetas):
        rhos,counts = np.unique(rhosmat[:,i], return_counts=True)
        accumulator[rhos,i] = counts
    return accumulator, thetas, rhos

def show_hough_line(img, accumulator, thetas, rhos, save_path=None):
    plt.imshow(accumulator,cmap='gray',extent=[np.rad2deg(thetas[-1]), np.rad2deg(thetas[0]), rhos[-1], rhos[0]])
    plt.show()

image=Image.open(sys.argv[1])
img=np.array(image)

original=img.copy()
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# accumulator, thetas, rhos = fast_hough_line(gray)
# show_hough_line(gray, accumulator, thetas, rhos, save_path='imgs/output.png')

edges = cv2.Canny(gray, 100, 200)
lines = cv2.HoughLinesP(edges, 1, np.pi / 180, 120,None, 50,50)

for line in lines:
    x1, y1, x2, y2 = line[0]
    cv2.line(img, (x1, y1), (x2, y2), (255, 0, 0), 3)

# plt.subplot(1,3,1)
# plt.imshow(original)
# plt.axis("off")
# plt.title("original")

# plt.subplot(1,3,2)
img=Image.fromarray(img)
plt.imshow(img)
img.show()
# plt.axis("off")
# plt.title("hough")

# plt.subplot(1,3,3)
# plt.imshow(edges)
# plt.axis("off")
# plt.title("canny")
